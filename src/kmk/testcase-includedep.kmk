# $Id: testcase-includedep.kmk 2413 2010-09-11 17:43:04Z bird $
## @file
# kBuild - testcase for the includedep directive.
#

#
# Copyright (c) 2008-2010 knut st. osmundsen <bird-kBuild-spamx@anduin.net>
#
# This file is part of kBuild.
#
# kBuild is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# kBuild is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with kBuild.  If not, see <http://www.gnu.org/licenses/>
#
#

DEPTH = ../..
include $(PATH_KBUILD)/header.kmk

ifdef testcase-includedep-sub.kmk
$(error testcase-includedep-sub.kmk is defined at the start of the testcase.)
endif


foo = testcase-includedep-sub
includedep $(foo).kmk
ifneq ($(testcase-includedep-sub.kmk),included)
$(error The first test failed.)
endif
testcase-includedep-sub.kmk :=
ifdef testcase-includedep-sub.kmk
$(error testcase-includedep-sub.kmk is persistent and does not want to be undefed.)
endif


foo = includedep
includedep testcase-$(foo)-sub.kmk
ifneq ($(testcase-includedep-sub.kmk),included)
$(error The second test failed.)
endif
testcase-includedep-sub.kmk :=
ifdef testcase-includedep-sub.kmk
$(error testcase-includedep-sub.kmk is persistent and does not want to be undefed.)
endif


foo = kmk
includedep testcase-includedep-sub.$(foo)
ifneq ($(testcase-includedep-sub.kmk),included)
$(error The thrid test failed.)
endif
testcase-includedep-sub.kmk :=
ifdef testcase-includedep-sub.kmk
$(error testcase-includedep-sub.kmk is persistent and does not want to be undefed.)
endif


includedep testcase-includedep-sub.kmk
ifneq ($(testcase-includedep-sub.kmk),included)
$(error The forth test failed.)
endif
testcase-includedep-sub.kmk :=
ifdef testcase-includedep-sub.kmk
$(error testcase-includedep-sub.kmk is persistent and does not want to be undefed.)
endif


foo = asdf
includedep testcase-$(foo)-sub.kmk
ifeq ($(testcase-includedep-sub.kmk),included)
$(error The fifth test failed.)
endif
testcase-includedep-sub.kmk :=
ifdef testcase-includedep-sub.kmk
$(error testcase-includedep-sub.kmk is persistent and does not want to be undefed.)
endif


all_recursive:
	$(ECHO) "includedep works fine"

